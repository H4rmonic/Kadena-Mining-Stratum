//const rust = require('./ckb-ffi');

//const string = rust.stringify({test: 123});
//console.log("stringified:" + stringified);

/*
var ffi = require('ffi');
var ref = require("ref");
// Returns a bignum regardless
exports.get_raw_header = function(json_template) {
	console.log("--- ffi get-raw_header ---");
  //var outputPtr = ref.refType('string');
	var myobj = ref.types.void;
	var myobjPtr = ref.refType(myobj);

  var myBufObj = ref.types.char;
	var myBufObjPtr = ref.refType(myBufObj); 

//extern int32_t ckb_load_block_from_template(buffer_t* output_block, char* json_block_template);
	var libRust = ffi.Library('/usr/local/lib/libckb_ffi.so', { 
		'ckb_load_block_from_template': [ 'void', [ 'char *', 'char *' ] ]
	});

  var buf = Buffer.from.alloc(192);
  var newBlock = libRust.ckb_load_block_from_template(buf, json_template);
	console.log("newBlock=" + newBlock);

}
*/
