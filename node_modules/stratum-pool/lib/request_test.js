var request = require("request");
var events = require("events");
var https = require("https");

const reqfast = require("req-fast");

let options = {
  url: "https://estats.chainweb.com/chainweb/0.0/mainnet01/header/updates",
  method: "GET",
  headers: {
    'connection': "keep-alive",
    'Content-Type': "text/event-stream",
    'cache-control': "no-cache"
  }
};

let r = reqfast(options);
r.on('data', function(chunk) {
    console.log(`DATA! ${chunk}`);
    const powHash = chunk.powHash;
    console.log(`powHash ${powHash}`);
});
r.on("end", function(resp) {
    console.error(`end stream ${res}`);
});
r.on("error", function(error, res) {
    console.error(`end stream error ${error} ${res}`);
});
r.on("abort", function() {
      console.error(`stream aborted!`);
});


//    options, 
//     function (err, resp) {

//     if (err) {
//       console.log(`error!!!`);
//     }
//     // statusCode always exist except STREAM `error` was caught.
//       var status = resp && resp.statusCode;
//       console.log(`RESPONSE ${resp}`);
//   }
//);



/* works
https.get(
  {
    agent: false,
    path: "/chainweb/0.0/mainnet01/header/updates",
    hostname: "estats.chainweb.com"
  },
  res => {
    res.on("data", data => {
      console.log(`DATA ${data}`);
    });
  }
);
*/
/*
const headers = {
  'Content-Type': "text/event-stream",
  'Connection': "keep-alive",
  'Cache-Control': "no-cache"
};


request(
  "https://estats.chainweb.com/chainweb/0.0/mainnet01/header/updates",
  { json: true },
  (err, res, body) => {
    if (err) {
      return console.log(err);
    }
    console.log(body.url);
    console.log(body.explanation);
  }
);
*/
